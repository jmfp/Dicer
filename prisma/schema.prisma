// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Post {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  slug        String    @unique
  title       String
  content     String
  image       String
  description String
  category    String    //id of category post is in
  previous    String?   //slug of previous post in series
  next        String?   //slug of next post in series
  published   Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  keywords    String[]  
  ebayImage   String?   //TODO: for now, ebay images are uploaded per post, but should transition to dropdown where user can choose from uploaded images
  ebaySearch  String?   //search string for ebay ad
  ebayProduct String?
  views       Int       @default(0)
  //author   User      @relation(fields: [authorId], references: [id])
  //authorId String    @db.ObjectId
  //comments Comment[]
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  email       String    @unique
  password    String
  username    String    @unique
  subscribed  Boolean   @default(false)
  admin       Boolean   @default(false)
}

model Course {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  chapters    String[]  //urls for youtube videos
  titles      String[]  //titles for each chapter
  ownerId     String    //owner of course
  price       Float     @default(0.00)
  completed   Boolean   @default(false)
}

model Image{
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  base64      String    //base64 for an image
}

model Category{
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
}